// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  username       String           @unique
  password       String
  displayName    String
  role           Role
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Workspace_User Workspace_User[]
}

model ApiUrl {
  id        String   @id
  url       String   @unique
  type      Type
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Workspace {
  id             String           @id @default(uuid())
  name           String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Workspace_User Workspace_User[]
  Section        Section[]
  Project        Project[]
}

model Project {
  id          String    @id @default(uuid())
  title       String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  workspaceId String
  sectionId   Int
  Section     Section   @relation(fields: [sectionId], references: [id])
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])
  Link        Link[]
}

model Link {
  id        Int      @id @default(autoincrement())
  label     String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projectId String
  Project   Project  @relation(fields: [projectId], references: [id])
}

model Section {
  id          Int       @id @default(autoincrement())
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  workspaceId String
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])
  Project     Project[]
}

model Workspace_User {
  workspaceId String
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])
  userId      Int
  User        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([workspaceId, userId])
}

enum Role {
  VIEWER
  ANALYST
  ADMIN
}

enum Type {
  YOUTUBE
  TIKTOK
  TWITTER
}
